"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createTemplate = void 0;
const t = __importStar(require("@babel/types"));
const helpers = __importStar(require("../helpers"));
const JSXElement_1 = __importDefault(require("./JSXElement"));
const JSXExpressionContainer_1 = __importDefault(require("./JSXExpressionContainer"));
/**
 * 创建单个原生模板
 *
 * @param element
 * @param {NodePath} path
 * @param {string} module
 * @param {(Array<string | number>)} dataPath
 * @returns {string}
 */
function createTemplate(element, path, dataPath, options) {
    if (t.isJSXElement(element.node)) {
        return JSXElement_1.default(element, path, dataPath, createTemplate, options);
    }
    if (t.isJSXExpressionContainer(element.node)) {
        return JSXExpressionContainer_1.default(element.node, dataPath);
    }
    if (t.isJSXText(element.node)) {
        return `{{'${helpers.normalizeLiteral(element.node.value)}'}}`;
    }
    // case: JSXFragment
    // JSXFragment 已经被过滤，不存在
    // case: JSXSpreadChild
    // 未知使用场景
    return '';
}
exports.createTemplate = createTemplate;
