var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import memoizeOne from 'memoize-one';
import { createCallback, createInputEvent, aliasProps } from '../../createHostComponent';
import alias from './props/alias';
var createInputCallback = memoizeOne(createCallback);
var createConfirmCallback = memoizeOne(createCallback);
var createFocusCallback = memoizeOne(createCallback);
var createBlurCallback = memoizeOne(createCallback);
var Input = /** @class */ (function (_super) {
    __extends(Input, _super);
    function Input(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            value: '',
            // 阿里
            controlled: false,
        };
        _this.handleInput = function (e) {
            var controlled = _this.state.controlled;
            if (typeof _this.props.onInput === 'function') {
                return _this.props.onInput(e);
            }
            // 微信
            // 注意，微信要对 input 受控，必须要在 onInput 方法返回值
            return controlled ? _this.props.value : undefined;
        };
        var controlled = props.value !== undefined;
        var value = controlled ? props.value : props.defaultValue;
        _this.state = {
            value: value,
            controlled: controlled,
        };
        return _this;
    }
    Input.prototype.componentDidUpdate = function () {
        if (this.props.value !== undefined && this.props.value !== this.state.value) {
            this.setState({ value: this.props.value });
        }
    };
    Input.prototype.render = function () {
        var _a, _b, _c, _d, _e, _f;
        var inputProps = __assign({}, this.props);
        if (inputProps.onInput) {
            inputProps.onInput = createInputCallback(this.handleInput, createInputEvent);
        }
        if (inputProps.onConfirm) {
            inputProps.onConfirm = createConfirmCallback(this.props.onConfirm, createInputEvent);
        }
        if (inputProps.onFocus) {
            inputProps.onFocus = createFocusCallback(this.props.onFocus, createInputEvent);
        }
        if (inputProps.onBlur) {
            inputProps.onBlur = createBlurCallback(this.props.onBlur, createInputEvent);
        }
        // 通用属性的默认属性根据平台在这里设置
        if (process.env.REMAX_PLATFORM === 'toutiao') {
            inputProps.maxLength = (_a = inputProps.maxLength) !== null && _a !== void 0 ? _a : 140;
        }
        if (process.env.REMAX_PLATFORM === 'wechat') {
            inputProps.type = (_b = inputProps.type) !== null && _b !== void 0 ? _b : 'text';
            inputProps.password = (_c = inputProps.password) !== null && _c !== void 0 ? _c : false;
            inputProps.disabled = (_d = inputProps.disabled) !== null && _d !== void 0 ? _d : false;
            inputProps.focus = (_e = inputProps.focus) !== null && _e !== void 0 ? _e : false;
            inputProps.maxLength = (_f = inputProps.maxLength) !== null && _f !== void 0 ? _f : 140;
        }
        var nextProps = aliasProps(__assign(__assign({}, inputProps), this.state), alias);
        return React.createElement('input', nextProps);
    };
    // 平台独有的属性默认值写在这
    Input.defaultProps = {
        'toutiao-selection-end': 999,
        'toutiao-selection-start': 999,
        'wechat-placeholder-class': 'input-placeholder',
        'wechat-cursor-spacing': 0,
        'wechat-confirm-type': 'done',
        'wechat-confirm-hold': false,
        'wechat-selection-end': -1,
        'wechat-selection-start': -1,
        'wechat-adjust-position': true,
        'wechat-hold-keyboard': false,
    };
    return Input;
}(React.Component));
export default Input;
