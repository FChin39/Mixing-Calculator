var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
import * as React from 'react';
import TextareaAutoSize from 'react-autosize-textarea';
import useWebPlaceholderStyle from '../../useWebPlaceholderStyle';
import { filterProps } from '../../utils/isPlatformSpecifyProp';
import clsx from 'clsx';
var Textarea = function (props, ref) {
    var _a = filterProps(props), onConfirm = _a.onConfirm, onKeyPress = _a.onKeyPress, autoHeight = _a.autoHeight, className = _a.className, placeholderStyle = _a.placeholderStyle, restProps = __rest(_a, ["onConfirm", "onKeyPress", "autoHeight", "className", "placeholderStyle"]);
    var _b = __read(useWebPlaceholderStyle(placeholderStyle), 1), placeholderStyleClassName = _b[0];
    function handleKeyPress(e) {
        if (e.key === 'Enter' && typeof onConfirm === 'function') {
            onConfirm(e);
        }
        if (typeof onKeyPress === 'function') {
            onKeyPress(e);
        }
    }
    var textareaClassName = clsx('remax-textarea', className, placeholderStyleClassName);
    if (autoHeight) {
        return React.createElement(TextareaAutoSize, __assign({}, restProps, { className: textareaClassName, ref: ref, onKeyPress: handleKeyPress }));
    }
    return React.createElement("textarea", __assign({}, restProps, { className: textareaClassName, ref: ref, onKeyPress: handleKeyPress }));
};
export default React.forwardRef(Textarea);
