var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import { filterProps } from '../../utils/isPlatformSpecifyProp';
var Form = function (props, ref) { return (React.createElement("form", __assign({}, filterProps(props), { ref: ref }))); };
export default React.forwardRef(Form);
