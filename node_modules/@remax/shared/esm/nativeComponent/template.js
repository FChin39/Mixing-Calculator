import * as htmlparser2 from 'htmlparser2';
import fs from 'fs';
import { getPath } from './helpers';
export function walk(platformConfig, filePath, templatePaths, options) {
    if (!fs.existsSync(filePath)) {
        console.error("\u6587\u4EF6 " + filePath + " \u4E0D\u5B58\u5728", options.notify);
        return;
    }
    var _a = platformConfig.template, tag = _a.tag, src = _a.src;
    templatePaths.add(filePath);
    var content = fs.readFileSync(filePath).toString();
    var parser = new htmlparser2.Parser({});
    parser._cbs.onopentag = function (name, attrs) {
        if (name === tag && attrs[src]) {
            walk(platformConfig, getPath(filePath, attrs[src]), templatePaths, options);
        }
        else if (['include', 'import'].includes(name) && attrs.src) {
            walk(platformConfig, getPath(filePath, attrs.src), templatePaths, options);
        }
    };
    parser.reset();
    parser.write(content);
    parser.end();
}
export default function template(platformConfig, options, id) {
    var templatePaths = new Set();
    var filePath = id.replace(/\.js$/, platformConfig.template.extension);
    walk(platformConfig, filePath, templatePaths, options);
    return Array.from(templatePaths);
}
