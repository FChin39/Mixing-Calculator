"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNativeEntryAssetOutputPath = exports.getPath = exports.isNativeComponent = void 0;
var fs = __importStar(require("fs"));
var path_1 = __importDefault(require("path"));
var path_2 = require("../path");
var isNativeComponent = function (sourcePath) {
    if (!sourcePath) {
        return false;
    }
    if (path_1.default.extname(sourcePath) !== '.js') {
        return false;
    }
    var sourceJsonPath = sourcePath.replace(/\.js$/, '.json');
    if (!fs.existsSync(sourceJsonPath)) {
        return false;
    }
    return require(sourceJsonPath).component;
};
exports.isNativeComponent = isNativeComponent;
var getPath = function (from, to) {
    return path_2.slash(path_1.default.resolve(path_1.default.dirname(from), to));
};
exports.getPath = getPath;
var NATIVE_COMPONENT_OUTPUT_DIR = 'remaxVendors';
function getNativeEntryAssetOutputPath(sourcePath, options) {
    return (NATIVE_COMPONENT_OUTPUT_DIR +
        '/' +
        path_2.slash(sourcePath)
            .replace(path_2.slash(options.cwd) + '/', '')
            .replace(path_2.slash(options.rootDir) + '/', '')
            .replace(/@/g, '_')
            .replace(/node_modules/g, 'npm'));
}
exports.getNativeEntryAssetOutputPath = getNativeEntryAssetOutputPath;
