"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var fs = __importStar(require("fs"));
var babelParser = __importStar(require("@babel/parser"));
var traverse_1 = __importDefault(require("@babel/traverse"));
var lodash_1 = require("lodash");
var resolve_1 = __importDefault(require("resolve"));
var helpers_1 = require("./helpers");
var walk = function (jsPath, modules, options) {
    var jsContent = fs.readFileSync(jsPath).toString();
    var ast = babelParser.parse(jsContent, {
        sourceType: 'module',
    });
    var extract = function (_a) {
        var node = _a.node;
        var importPath = (lodash_1.get(node, 'callee.name') === 'require' ? lodash_1.get(node, 'arguments[0].value') : '') || lodash_1.get(node, 'source.value');
        if (!importPath) {
            return;
        }
        try {
            // 尝试 resolve，失败跳过
            importPath = resolve_1.default.sync(importPath, { basedir: options.cwd });
        }
        catch (_b) {
            // ignore
        }
        var absoluteId = helpers_1.getPath(jsPath, importPath);
        var absolutePath = /.js$/.test(absoluteId) ? absoluteId : absoluteId + '.js';
        if (!fs.existsSync(absolutePath)) {
            absolutePath = absoluteId + '/index.js';
        }
        if (!fs.existsSync(absolutePath)) {
            return;
        }
        modules.add(absolutePath);
        walk(absolutePath, modules, options);
    };
    traverse_1.default(ast, {
        CallExpression: extract,
        ImportDeclaration: extract,
    });
};
var parseTemplate = function (filePath, modules, options) {
    walk(filePath, modules, options);
    modules.add(filePath);
};
function jsModule(options, id) {
    var templatePath = id;
    var modules = new Set();
    parseTemplate(templatePath, modules, options);
    return Array.from(modules);
}
exports.default = jsModule;
