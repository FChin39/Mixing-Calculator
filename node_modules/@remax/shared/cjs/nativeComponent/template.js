"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.walk = void 0;
var htmlparser2 = __importStar(require("htmlparser2"));
var fs_1 = __importDefault(require("fs"));
var helpers_1 = require("./helpers");
function walk(platformConfig, filePath, templatePaths, options) {
    if (!fs_1.default.existsSync(filePath)) {
        console.error("\u6587\u4EF6 " + filePath + " \u4E0D\u5B58\u5728", options.notify);
        return;
    }
    var _a = platformConfig.template, tag = _a.tag, src = _a.src;
    templatePaths.add(filePath);
    var content = fs_1.default.readFileSync(filePath).toString();
    var parser = new htmlparser2.Parser({});
    parser._cbs.onopentag = function (name, attrs) {
        if (name === tag && attrs[src]) {
            walk(platformConfig, helpers_1.getPath(filePath, attrs[src]), templatePaths, options);
        }
        else if (['include', 'import'].includes(name) && attrs.src) {
            walk(platformConfig, helpers_1.getPath(filePath, attrs.src), templatePaths, options);
        }
    };
    parser.reset();
    parser.write(content);
    parser.end();
}
exports.walk = walk;
function template(platformConfig, options, id) {
    var templatePaths = new Set();
    var filePath = id.replace(/\.js$/, platformConfig.template.extension);
    walk(platformConfig, filePath, templatePaths, options);
    return Array.from(templatePaths);
}
exports.default = template;
