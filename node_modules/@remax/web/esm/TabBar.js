var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
import * as React from 'react';
import { Link } from 'react-router-dom';
export function TabBar(_a) {
    var _b;
    var config = _a.config, history = _a.history;
    var _c = __read(React.useState(history.location.pathname), 2), currentPath = _c[0], setCurrentPath = _c[1];
    React.useEffect(function () {
        setCurrentPath(history.location.pathname);
        return history.listen(function () {
            setCurrentPath(history.location.pathname);
        });
    }, []);
    var isActive = function (url) {
        if (!url.startsWith('/')) {
            url = '/' + url;
        }
        return currentPath === url;
    };
    return (React.createElement("div", { className: "remax-tab-bar", style: { backgroundColor: (_b = config.backgroundColor) !== null && _b !== void 0 ? _b : '' } }, config.items.map(function (item, index) { return (React.createElement(TabBarItem, { key: index, config: config, isActive: isActive(item.url), item: item })); })));
}
function TabBarItem(_a) {
    var _b, _c;
    var config = _a.config, isActive = _a.isActive, item = _a.item;
    var icon = isActive ? item.activeImage || item.image : item.image;
    var textColor = (_b = config.textColor) !== null && _b !== void 0 ? _b : '#333';
    var selectedColor = (_c = config.selectedColor) !== null && _c !== void 0 ? _c : '#108ee9';
    return (React.createElement(Link, { to: "/" + item.url, className: "remax-tab-item" },
        React.createElement("div", { className: "remax-tab-item-image", style: { backgroundImage: "url(" + icon + ")" } }),
        React.createElement("div", { className: "remax-tab-item-title", style: {
                color: isActive ? selectedColor : textColor,
            } }, item.title)));
}
