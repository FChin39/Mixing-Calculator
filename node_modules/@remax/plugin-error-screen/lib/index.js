"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path = __importStar(require("path"));
const fs = __importStar(require("fs"));
const webpack_virtual_modules_1 = __importDefault(require("webpack-virtual-modules"));
const shared_1 = require("@remax/shared");
exports.default = (_, { cwd, rootDir }) => {
    const searchCustomErrorFile = () => {
        const extensions = ['.js', '.jsx', '.ts', '.tsx'];
        for (const ext of extensions) {
            const file = path.join(cwd, rootDir, `_error${ext}`);
            if (fs.existsSync(file)) {
                return file;
            }
        }
    };
    let errorScreenFile;
    if (process.env.NODE_ENV !== 'production') {
        errorScreenFile = path.resolve(__dirname, './ErrorScreen.development.js');
    }
    else {
        const customErrorFile = searchCustomErrorFile();
        errorScreenFile = customErrorFile !== null && customErrorFile !== void 0 ? customErrorFile : path.resolve(__dirname, './ErrorScreen.js');
    }
    const errorBoundaryFile = path.resolve(__dirname, './ErrorBoundary.js');
    const virtualModules = new webpack_virtual_modules_1.default({
        'node_modules/@remax/plugin-error-screen/runtime.js': `
        import React from 'react';
        import { View } from 'remax/one';
        import ErrorScreen from '${shared_1.slash(errorScreenFile)}';
        import ErrorBoundary from '${shared_1.slash(errorBoundaryFile)}';

        export default {
          onPageComponent({ component }) {
            function ErrorBoundaryWrap(props, ref) {
              return React.createElement(
                ErrorBoundary,
                { errorScreen: ErrorScreen },
                React.createElement(component, { ...props, ref })
              );
            }
            ErrorBoundaryWrap.displayName = 'ErrorBoundary'
            return React.forwardRef(ErrorBoundaryWrap);
          },
        };
      `,
    });
    return {
        configWebpack({ config }) {
            config.plugin('remax-plugin-error-screen-virtual-modules').use(virtualModules);
        },
        registerRuntimePlugin() {
            return '@remax/plugin-error-screen/runtime.js';
        },
    };
};
