import VNode, { RawNode } from './VNode';
import { FiberRoot } from 'react-reconciler';
interface SpliceUpdate {
    path: string;
    start: number;
    deleteCount: number;
    items: RawNode[];
}
export default class AppContainer {
    context: any;
    root: VNode;
    updateQueue: SpliceUpdate[];
    _rootContainer?: FiberRoot;
    constructor();
    requestUpdate(path: string, start: number, deleteCount: number, ...items: RawNode[]): void;
    applyUpdate(): void;
    createCallback(name: string, fn: (...params: any) => any): void;
    appendChild(child: VNode): void;
    removeChild(child: VNode): void;
    insertBefore(child: VNode, beforeChild: VNode): void;
}
export {};
