"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createCallbackProxy = void 0;
var stopPropagation_1 = __importStar(require("./stopPropagation"));
var constants_1 = require("./constants");
function isSyntheticType(inputType) {
    if (constants_1.DEPRECATED_CATCH_TYPE === inputType) {
        console.warn('DEPRECATION: remax 已支持在 onClick 事件中使用 stopPropagation 阻止事件冒泡，请尽量不要使用 catchClick');
    }
    return !!constants_1.SYNTHETIC_TYPES.find(function (type) { return type === inputType; });
}
function createBaseSyntheticEvent(node, eventType, nativeEvent) {
    if (!nativeEvent) {
        return;
    }
    // 添加阻止冒泡方法
    nativeEvent.stopPropagation = function () {
        stopPropagation_1.default(node, eventType);
    };
    return nativeEvent;
}
function createCallbackProxy(eventType, node, callback) {
    if (!isSyntheticType(eventType)) {
        return callback;
    }
    return function (nativeEvent) {
        var restParams = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            restParams[_i - 1] = arguments[_i];
        }
        var syntheticEvent = createBaseSyntheticEvent(node, eventType, nativeEvent);
        if (stopPropagation_1.isPropagationStopped[eventType]) {
            stopPropagation_1.validate(node, eventType);
            return;
        }
        return callback.apply(void 0, __spread([syntheticEvent], restParams));
    };
}
exports.createCallbackProxy = createCallbackProxy;
