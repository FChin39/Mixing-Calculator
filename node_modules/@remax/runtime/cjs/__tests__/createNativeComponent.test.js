"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var react_test_renderer_1 = __importDefault(require("react-test-renderer"));
var createNativeComponent_1 = __importDefault(require("../createNativeComponent"));
describe('createNativeComponent', function () {
    it('create native component', function () {
        var Card = createNativeComponent_1.default('card');
        var testRenderer = react_test_renderer_1.default.create(React.createElement(Card, null));
        expect(testRenderer.toJSON()).toMatchSnapshot();
        expect(function () {
            testRenderer.root.findByType('card').props.__ref('foo');
        }).not.toThrow();
    });
    it('rename ref', function () {
        var Card = createNativeComponent_1.default('card');
        var card = React.createRef();
        var testRenderer = react_test_renderer_1.default.create(React.createElement(Card, { ref: card }));
        expect(testRenderer.toJSON()).toMatchSnapshot();
        testRenderer.root.findByType('card').props.__ref('foo');
        expect(card.current).toBe('foo');
    });
    it('functional ref', function () {
        var Card = createNativeComponent_1.default('card');
        var current = '';
        var card = function (e) {
            current = e;
        };
        var testRenderer = react_test_renderer_1.default.create(React.createElement(Card, { ref: card }));
        expect(testRenderer.toJSON()).toMatchSnapshot();
        testRenderer.root.findByType('card').props.__ref('foo');
        expect(current).toBe('foo');
    });
});
