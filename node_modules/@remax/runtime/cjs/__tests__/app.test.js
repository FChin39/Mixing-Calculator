"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
require("./helpers/setupGlobals");
var App_1 = __importDefault(require("./helpers/App"));
var hooks_1 = require("../hooks");
var createAppConfig_1 = __importDefault(require("../createAppConfig"));
var framework_shared_1 = require("@remax/framework-shared");
describe('app', function () {
    beforeAll(function () {
        framework_shared_1.RuntimeOptions.apply({
            appEvents: [
                'onLaunch',
                'onShow',
                'onHide',
                'onShareAppMessage',
                'onPageNotFound',
                'onError',
                'onUnhandledRejection',
                'onThemeChange',
            ],
            pageEvents: {
                'pages/test/only/onshow': ['onShow'],
                'pages/test/index': [
                    'onShow',
                    'onHide',
                    'onPullDownRefresh',
                    'onPullIntercept',
                    'onReachBottom',
                    'onPageScroll',
                    'onShareAppMessage',
                    'onShareTimeline',
                    'onTitleClick',
                    'onOptionMenuClick',
                    'onPopMenuClick',
                    'onReady',
                    'onResize',
                    'onTabItemTap',
                ],
            },
        });
    });
    afterAll(function () {
        framework_shared_1.RuntimeOptions.reset();
    });
    it('lifecycle methods', function () {
        var log = [];
        var Foo = /** @class */ (function (_super) {
            __extends(Foo, _super);
            function Foo() {
                return _super !== null && _super.apply(this, arguments) || this;
            }
            Foo.prototype.onLaunch = function () {
                log.push('onLaunch');
            };
            Foo.prototype.onShow = function () {
                log.push('onShow');
            };
            Foo.prototype.onHide = function () {
                log.push('onHide');
            };
            Foo.prototype.onError = function (error) {
                log.push(error);
                log.push('onError');
            };
            Foo.prototype.onShareAppMessage = function (object) {
                log.push(object.from);
                log.push('onShareAppMessage');
            };
            Foo.prototype.onPageNotFound = function (object) {
                log.push(object.path);
                log.push('onPageNotFound');
            };
            Foo.prototype.onUnhandledRejection = function () {
                log.push('onUnhandledRejection');
            };
            Foo.prototype.onThemeChange = function () {
                log.push('onThemeChange');
            };
            Foo.prototype.render = function () {
                return React.createElement(React.Fragment, null, this.props.children);
            };
            return Foo;
        }(React.Component));
        var app = App_1.default(createAppConfig_1.default(Foo));
        app.launch();
        app.show();
        app.shareAppMessage();
        app.pageNotFound();
        app.error();
        app.unhandledRejection();
        app.themeChange();
        app.hide();
        expect(log).toEqual([
            'onLaunch',
            'onShow',
            'menu',
            'onShareAppMessage',
            'path',
            'onPageNotFound',
            'error',
            'onError',
            'onUnhandledRejection',
            'onThemeChange',
            'onHide',
        ]);
    });
    it('hooks', function () {
        var log = [];
        function Foo(props) {
            hooks_1.useAppEvent('onLaunch', function () {
                log.push('launch');
            });
            hooks_1.useAppEvent('onShow', function () {
                log.push('show');
                return function () {
                    log.push('unregister show');
                };
            });
            hooks_1.useAppEvent('onShow', function () {
                log.push('appEventShow');
            });
            hooks_1.useAppEvent('onPageNotFound', function () {
                log.push('pageNotFound');
            });
            hooks_1.useAppEvent('onShareAppMessage', function () {
                log.push('shareAppMessage');
                return {};
            });
            hooks_1.useAppEvent('onError', function () {
                log.push('error');
            });
            hooks_1.useAppEvent('onHide', function () {
                log.push('hide');
            });
            return props.children;
        }
        var app = App_1.default(createAppConfig_1.default(Foo));
        app.launch();
        app.show();
        app.pageNotFound();
        app.shareAppMessage();
        app.error();
        app.unhandledRejection();
        app.themeChange();
        app.hide();
        expect(log).toEqual(['launch', 'show', 'appEventShow', 'pageNotFound', 'shareAppMessage', 'error', 'hide']);
    });
});
