"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
require("./polyfills/Function");
var React = __importStar(require("react"));
var react_is_1 = require("react-is");
var render_1 = __importDefault(require("./render"));
var AppContainer_1 = __importDefault(require("./AppContainer"));
var framework_shared_1 = require("@remax/framework-shared");
var DefaultAppComponent = /** @class */ (function (_super) {
    __extends(DefaultAppComponent, _super);
    function DefaultAppComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DefaultAppComponent.prototype.render = function () {
        return React.createElement(React.Fragment, null, this.props.children);
    };
    return DefaultAppComponent;
}(React.Component));
function createAppConfig(App) {
    var WrappedApp = framework_shared_1.RuntimeOptions.get('pluginDriver').onAppComponent(App);
    var createConfig = function (AppComponent) {
        if (AppComponent === void 0) { AppComponent = DefaultAppComponent; }
        var config = {
            _container: new AppContainer_1.default(),
            _pages: [],
            _instance: React.createRef(),
            onLaunch: function (options) {
                this._container.context = this;
                this._render();
                return this.callLifecycle(framework_shared_1.AppLifecycle.launch, options);
            },
            callLifecycle: function (lifecycle) {
                var _a;
                var args = [];
                for (var _i = 1; _i < arguments.length; _i++) {
                    args[_i - 1] = arguments[_i];
                }
                var callbacks = framework_shared_1.AppInstanceContext.lifecycleCallback[lifecycle] || [];
                var result;
                callbacks.forEach(function (callback) {
                    result = callback.apply(void 0, __spread(args));
                });
                if (result) {
                    return result;
                }
                var callback = framework_shared_1.callbackName(lifecycle);
                if (this._instance.current && this._instance.current[callback]) {
                    return (_a = this._instance.current)[callback].apply(_a, __spread(args));
                }
            },
            _mount: function (pageInstance) {
                /**
                 * 飞书开发者工具的问题，这里的 this 跟 getApp 拿到的不是同一个实例
                 */
                if (!this._container.context) {
                    this._container.context = this;
                }
                this._pages.push(pageInstance);
                this._render();
            },
            _unmount: function (pageInstance) {
                this._pages.splice(this._pages.indexOf(pageInstance), 1);
                this._render();
            },
            _render: function () {
                var props = {};
                if (framework_shared_1.isClassComponent(AppComponent) || AppComponent.$$typeof === react_is_1.ForwardRef) {
                    props.ref = this._instance;
                }
                return render_1.default(React.createElement(AppComponent, props, this._pages.map(function (p) { return p.element; })), this._container);
            },
            onShow: function (options) {
                return this.callLifecycle(framework_shared_1.AppLifecycle.show, options);
            },
            onHide: function () {
                return this.callLifecycle(framework_shared_1.AppLifecycle.hide);
            },
            onError: function (error) {
                return this.callLifecycle(framework_shared_1.AppLifecycle.error, error);
            },
            // 微信
            onPageNotFound: function (options) {
                return this.callLifecycle(framework_shared_1.AppLifecycle.pageNotFound, options);
            },
            // 微信
            onUnhandledRejection: function (options) {
                return this.callLifecycle(framework_shared_1.AppLifecycle.unhandledRejection, options);
            },
            // 微信
            onThemeChange: function (options) {
                return this.callLifecycle(framework_shared_1.AppLifecycle.themeChange, options);
            },
        };
        var lifecycleEvent = {
            // 阿里
            onShareAppMessage: function (options) {
                return this.callLifecycle(framework_shared_1.AppLifecycle.shareAppMessage, options);
            },
        };
        (framework_shared_1.RuntimeOptions.get('appEvents') || []).forEach(function (eventName) {
            if (lifecycleEvent[eventName]) {
                config[eventName] = lifecycleEvent[eventName];
            }
        });
        return framework_shared_1.RuntimeOptions.get('pluginDriver').onAppConfig(config);
    };
    return createConfig(WrappedApp);
}
exports.default = createAppConfig;
