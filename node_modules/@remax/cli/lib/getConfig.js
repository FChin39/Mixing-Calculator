"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
const defaultOptions_1 = require("./defaultOptions");
const schema_utils_1 = __importDefault(require("schema-utils"));
const schema = require('../OptionsSchema.json');
function readJavascriptConfig(path) {
    delete require.cache[path];
    const config = require(path);
    return config || {};
}
function normalizeConfigPath(options) {
    const pathKeys = ['cwd', 'rootDir', 'output'];
    pathKeys.forEach(key => {
        const value = options[key];
        // @ts-ignore string-type
        options[key] = path_1.default.normalize(value).replace(/(\\|\/)$/, '');
    });
    return options;
}
function getConfig(validate = true) {
    const configPath = path_1.default.join(process.cwd(), './remax.config');
    let options = {};
    if (fs_1.default.existsSync(configPath + '.js')) {
        options = readJavascriptConfig(configPath + '.js');
    }
    if (validate) {
        schema_utils_1.default(schema, options, {
            name: 'remax',
        });
    }
    const remaxConfig = Object.assign(Object.assign({}, defaultOptions_1.getDefaultOptions()), options);
    return normalizeConfigPath(remaxConfig);
}
exports.default = getConfig;
