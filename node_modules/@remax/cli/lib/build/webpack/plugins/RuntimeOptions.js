"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.appClassEvents = exports.pageClassEvents = void 0;
const path = __importStar(require("path"));
const shared_1 = require("@remax/shared");
const build_store_1 = __importDefault(require("@remax/build-store"));
const modules_1 = __importDefault(require("../../utils/modules"));
const webpack_sources_1 = require("webpack-sources");
const PageEntry_1 = __importDefault(require("../../entries/PageEntry"));
const PLUGIN_NAME = 'RemaxRuntimeOptionsPlugin';
exports.pageClassEvents = new Map();
exports.appClassEvents = new Map();
class RuntimeOptionsPlugin {
    constructor(builder) {
        this.builder = builder;
    }
    apply(compiler) {
        compiler.hooks.thisCompilation.tap(PLUGIN_NAME, (compilation) => {
            compilation.hooks.optimizeChunks.tap(PLUGIN_NAME, chunks => {
                const hostComponents = this.getHostComponents();
                const pageEvents = this.getPageEvents(chunks);
                const appEvents = this.getAppEvents();
                this.createRuntimeOptions(compilation, hostComponents, pageEvents, appEvents, '');
            });
        });
    }
    createRuntimeOptions(compilation, hostComponents, pageEvents, appEvents, assetsPath) {
        compilation.assets[path.join(assetsPath, '__remax_runtime_options__.js')] = new webpack_sources_1.OriginalSource(`module.exports = {
      hostComponents: ${JSON.stringify(hostComponents, null, 2)},
      pageEvents: ${JSON.stringify(pageEvents, null, 2)},
      appEvents: ${JSON.stringify(appEvents, null, 2)}
    }`, '__remax_runtime_options__.js');
    }
    getPageEvents(chunks) {
        const events = {};
        const { entries } = this.builder.entryCollection;
        entries.forEach(page => {
            if (!(page instanceof PageEntry_1.default)) {
                return;
            }
            const chunk = chunks.find(c => {
                return c.name === page.name;
            });
            // TODO: 应该有更好的获取 modules 的方式？
            const modules = modules_1.default(chunk);
            events[page.name] = Array.from(new Set(modules
                .reduce((acc, cur) => {
                return [...acc, ...(build_store_1.default.pageEvents.get(shared_1.slash(cur)) || []), ...(exports.pageClassEvents.get(shared_1.slash(cur)) || [])];
            }, [])
                .sort()));
        });
        return events;
    }
    getAppEvents() {
        let events = [];
        for (const key of build_store_1.default.appEvents.keys()) {
            // 这里 get 不可能为空
            events = events.concat(Array.from(build_store_1.default.appEvents.get(key)));
        }
        for (const key of exports.appClassEvents.keys()) {
            // 这里 get 不可能为空
            events = events.concat(Array.from(exports.appClassEvents.get(key)));
        }
        return Array.from(new Set(events.sort()));
    }
    getHostComponents() {
        return [...build_store_1.default.registeredHostComponents.keys()].reduce((obj, key) => {
            var _a;
            obj[key] = {
                alias: ((_a = build_store_1.default.registeredHostComponents.get(key)) === null || _a === void 0 ? void 0 : _a.alias) || {},
            };
            return obj;
        }, {});
    }
}
exports.default = RuntimeOptionsPlugin;
