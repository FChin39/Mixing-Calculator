"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const SourceCache_1 = __importDefault(require("../../../SourceCache"));
const PLUGIN_NAME = 'RemaxPluginAssetPlugin';
class PluginAssetPlugin {
    constructor(builder) {
        this.cache = new SourceCache_1.default();
        this.builder = builder;
    }
    apply(compiler) {
        compiler.hooks.emit.tapAsync(PLUGIN_NAME, async (compilation, callback) => {
            // plugin.json
            await this.createManifest(compilation);
            callback();
        });
    }
    createManifest(compilation) {
        const source = Buffer.from(JSON.stringify(this.builder.projectConfig, null, 2));
        const fileName = 'plugin.json';
        this.cache.invalid(fileName, source.toString(), () => {
            compilation.assets[fileName] = {
                source: () => source,
                size: () => Buffer.byteLength(source),
            };
        });
    }
}
exports.default = PluginAssetPlugin;
