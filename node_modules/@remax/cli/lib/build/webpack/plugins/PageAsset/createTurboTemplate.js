"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ejs_1 = __importDefault(require("ejs"));
const shared_1 = require("@remax/shared");
const build_store_1 = __importDefault(require("@remax/build-store"));
const TurboRender = __importStar(require("babel-plugin-remax-turbo-render"));
const lodash_1 = require("lodash");
const createTemplate_1 = require("./createTemplate");
async function createTurboTemplate(api, options, page, modules, meta, compilation) {
    const renderOptions = createTemplate_1.createRenderOptions(page.filename, compilation, options, true);
    const fileName = shared_1.slash(`${page.name}${meta.template.extension}`);
    const extractedTemplates = Array.from(build_store_1.default.extractedTemplates.values());
    const templates = [];
    extractedTemplates.forEach(t => {
        if (modules.includes(t.module)) {
            templates.push(t);
            t.isolated = false;
        }
    });
    const entries = extractedTemplates.filter((template) => template.isEntry && shared_1.slash(template.module) === page.filename);
    renderOptions.templates = lodash_1.sortBy(templates, 'id');
    renderOptions.entries = entries;
    renderOptions.TEMPLATE_ID = TurboRender.TEMPLATE_ID;
    renderOptions.sortBy = lodash_1.sortBy;
    renderOptions.skipComponents = build_store_1.default.skipHostComponents;
    renderOptions.renderIsolatedTemplates = true;
    // 可以进入到 static compiler 中的都是配置好 staticEjs 的平台
    let source = await ejs_1.default.renderFile(meta.staticEjs.page, renderOptions, {
        rmWhitespace: options.compressTemplate,
    });
    if (page.component !== true) {
        source = api.onPageTemplate({ template: source, page: page.name });
    }
    // TODO 用 uglify 替代 compressTemplate
    /* istanbul ignore next */
    if (options.compressTemplate) {
        source = source.replace(/^\s*$(?:\r\n?|\n)/gm, '').replace(/\r\n|\n/g, ' ');
    }
    compilation.assets[fileName] = {
        source: () => source,
        size: () => Buffer.byteLength(source),
    };
}
exports.default = createTurboTemplate;
