"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path = __importStar(require("path"));
const fs = __importStar(require("fs"));
const webpack_chain_1 = __importDefault(require("webpack-chain"));
const html_webpack_plugin_1 = __importDefault(require("html-webpack-plugin"));
const baseConfig_1 = __importDefault(require("./baseConfig"));
const webBaseConfig_1 = __importDefault(require("./webBaseConfig"));
const FallbackEntry_1 = __importDefault(require("../entries/FallbackEntry"));
function webpackConfig(builder) {
    const config = new webpack_chain_1.default();
    baseConfig_1.default(config, builder);
    const addEntry = (entry) => {
        config.entry(entry.name).add(entry.virtualPath);
        config.plugin('webpack-virtual-modules' + entry.name).use(entry.virtualModule);
        config.plugin('html-webpack-plugin' + entry.name).use(html_webpack_plugin_1.default, [
            {
                filename: entry.name + '.html',
                chunks: [entry.name],
                template: fs.existsSync(path.join(builder.projectPath.publicDir(), '/index.html'))
                    ? path.join(builder.projectPath.publicDir(), '/index.html')
                    : path.resolve(__dirname, '../../../template/index.html.ejs'),
                env: process.env.NODE_ENV,
            },
        ]);
    };
    builder.entryCollection.entries.forEach(addEntry);
    // 开发时，增加一个 fallback 路由
    if (builder.options.watch) {
        config.devServer.historyApiFallback({
            rewrites: [{ from: /.*/, to: '/fallback.html' }],
        });
        const fallbackEntry = new FallbackEntry_1.default(builder, 'fallback', './_fallback.js');
        addEntry(fallbackEntry);
    }
    config.optimization.splitChunks({
        cacheGroups: {
            vendor: {
                test: /node_modules/,
                name: 'vendor',
                minChunks: 2,
                chunks: 'all',
            },
            common: {
                name: 'common',
                minChunks: 2,
                chunks: 'all',
            },
        },
    });
    webBaseConfig_1.default(config, builder);
    return config.toConfig();
}
exports.default = webpackConfig;
