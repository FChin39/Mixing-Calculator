"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const webpack_1 = __importDefault(require("webpack"));
const EntryCollection_1 = __importDefault(require("./EntryCollection"));
const ProjectPath_1 = __importDefault(require("./ProjectPath"));
const readManifest_1 = __importDefault(require("../readManifest"));
class Builder {
    constructor(api, options, buildType) {
        this.api = api;
        this.options = options;
        this.target = options.target;
        this.buildType = buildType;
        if (this.target !== 'web') {
            api.registerAdapterPlugins(this.target);
        }
        this.projectPath = new ProjectPath_1.default(this);
        this.projectConfig = this.fetchProjectConfig();
        this.entryCollection = new EntryCollection_1.default(this);
        this.entryCollection.init();
        this.webpackConfig = this.createWebpackConfig();
        this.webpackCompiler = this.createWebpackCompiler();
    }
    fetchProjectConfig() {
        const configFile = this.buildType === 'miniplugin' ? this.projectPath.pluginConfigFile() : this.projectPath.appConfigFile();
        const config = readManifest_1.default(configFile, this.target, false);
        const finalConfig = ['miniapp', 'webapp'].includes(this.buildType) ? this.api.onAppConfig(config) : config;
        if (this.buildType === 'miniapp') {
            if (!finalConfig.pages || finalConfig.pages.length === 0) {
                throw new Error('app.config.js|ts 并未配置页面参数');
            }
        }
        this.projectConfig = finalConfig;
        return this.projectConfig;
    }
    createWebpackCompiler() {
        return webpack_1.default(this.webpackConfig);
    }
}
exports.default = Builder;
