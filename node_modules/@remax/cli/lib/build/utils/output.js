"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.output = void 0;
const node_notifier_1 = __importDefault(require("node-notifier"));
const COLORS = {
    red: '\x1b[31m',
    green: '\x1b[32m',
    yellow: '\x1b[33m',
    blue: '\x1b[34m',
};
const RESET = '\x1b[0m';
const output = (content, color, notify = false) => {
    const message = Array.isArray(content) ? content : [content];
    console.log(`${COLORS[color]}%s${RESET}`, ...message);
    if (notify) {
        node_notifier_1.default.notify({
            title: 'remax',
            message: message.join(' '),
        });
    }
};
exports.output = output;
const levelMap = { debug: 0, verbose: 1, info: 2, warn: 3, error: 4, silent: 5 };
let levelText = 'verbose';
let levelWidth = levelMap[levelText];
exports.default = {
    get level() {
        return levelText;
    },
    set level(value) {
        var _a;
        levelText = value;
        levelWidth = (_a = levelMap[value]) !== null && _a !== void 0 ? _a : 1;
    },
    message(...args) {
        if (levelWidth <= 2) {
            exports.output(...args);
        }
    },
    error(message, notify) {
        if (levelWidth <= 4) {
            exports.output(`\n🚨 ${message}`, 'red', notify);
        }
    },
    warn(message, notify) {
        if (levelWidth <= 3) {
            exports.output(`\n⚠️ ${message}`, 'yellow', notify);
        }
    },
};
