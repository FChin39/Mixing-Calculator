"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var path_1 = __importDefault(require("path"));
var FAKE_LOADER_NAME = 'webpack-inject-plugin.loader';
exports.registry = {};
var uniqueIDCounter = 0;
function getUniqueID() {
    var id = (++uniqueIDCounter).toString(16);
    return "webpack-inject-module-" + id;
}
var ENTRY_ORDER;
(function (ENTRY_ORDER) {
    ENTRY_ORDER[ENTRY_ORDER["First"] = 1] = "First";
    ENTRY_ORDER[ENTRY_ORDER["Last"] = 2] = "Last";
    ENTRY_ORDER[ENTRY_ORDER["NotLast"] = 3] = "NotLast";
})(ENTRY_ORDER = exports.ENTRY_ORDER || (exports.ENTRY_ORDER = {}));
function injectToArray(originalEntry, newEntry, entryOrder) {
    if (entryOrder === void 0) { entryOrder = ENTRY_ORDER.NotLast; }
    if (entryOrder === ENTRY_ORDER.First) {
        return [newEntry].concat(originalEntry);
    }
    if (entryOrder === ENTRY_ORDER.Last) {
        return originalEntry.concat([newEntry]);
    }
    return originalEntry.splice(0, originalEntry.length - 1).concat([
        newEntry
    ], originalEntry.splice(originalEntry.length - 1));
}
function createEntryFilter(filterOption) {
    if (filterOption === null || filterOption === undefined) {
        return function () { return true; };
    }
    if (typeof filterOption === 'string') {
        return function (entryName) { return filterOption === entryName; };
    }
    if (typeof filterOption === 'function') {
        return filterOption;
    }
    throw new Error("Unknown entry filter: " + typeof filterOption);
}
function injectEntry(originalEntry, newEntry, options) {
    var _this = this;
    if (originalEntry === undefined) {
        return newEntry;
    }
    var filterFunc = createEntryFilter(options.entryName);
    // Last module in an array gets exported, so the injected one must not be
    // last. https://webpack.github.io/docs/configuration.html#entry
    if (typeof originalEntry === 'string') {
        return injectToArray([originalEntry], newEntry, options.entryOrder);
    }
    if (Array.isArray(originalEntry)) {
        return injectToArray(originalEntry, newEntry, options.entryOrder);
    }
    if (typeof originalEntry === 'function') {
        // The entry function is meant to be called on each compilation (when using --watch, webpack-dev-server)
        // We wrap the original function in our own function to reflect this behavior.
        return function () { return __awaiter(_this, void 0, void 0, function () {
            var callbackOriginEntry;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, originalEntry()];
                    case 1:
                        callbackOriginEntry = _a.sent();
                        // Safe type-cast here because callbackOriginEntry cannot be an EntryFunc,
                        // so the injectEntry call won't return one either.
                        return [2 /*return*/, injectEntry(callbackOriginEntry, newEntry, options)];
                }
            });
        }); };
    }
    if (Object.prototype.toString.call(originalEntry).slice(8, -1) === 'Object') {
        return Object.entries(originalEntry).reduce(function (a, _a) {
            var key = _a[0], entry = _a[1];
            if (filterFunc(key)) {
                a[key] = injectEntry(entry, newEntry, options);
            }
            else {
                a[key] = entry;
            }
            return a;
        }, {});
    }
    return originalEntry;
}
exports.injectEntry = injectEntry;
var WebpackInjectPlugin = /** @class */ (function () {
    function WebpackInjectPlugin(loader, options) {
        this.loader = loader;
        this.options = {
            entryName: (options && options.entryName) || undefined,
            entryOrder: (options && options.entryOrder) || ENTRY_ORDER.NotLast,
            loaderID: (options && options.loaderID) || getUniqueID()
        };
    }
    WebpackInjectPlugin.prototype.apply = function (compiler) {
        var id = this.options.loaderID;
        var newEntry = path_1.default.resolve(__dirname, FAKE_LOADER_NAME + "?id=" + id + "!");
        exports.registry[id] = this.loader;
        compiler.options.entry = injectEntry(compiler.options.entry, newEntry, this.options);
    };
    return WebpackInjectPlugin;
}());
exports.default = WebpackInjectPlugin;
//# sourceMappingURL=main.js.map